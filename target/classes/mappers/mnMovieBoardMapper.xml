<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mycompany.myapp.MnMovieBoardMapper">
 
	<!-- 관리자 영화 평점 리스트 출력  -->
	<select id="mnMovieListAll" 
   	resultType="com.mycompany.myapp.domain.MovieViewJoinResultVO">
   
      SELECT 
      	movie_num,
      	title,
      	movie_genre,
      	opening_day,
      	closing_day, 
      	registration_time
      FROM tbl_movie
   </select>
	
	<!-- 관리자 영화 상세 보기 -->
	<select id = "mnMovieDetail" resultType ="com.mycompany.myapp.domain.MovieViewJoinResultVO">
		select
			movie.movie_num,
			title,
			story,
			actor,
			director,
			CAST(DATE_FORMAT(opening_day, '%Y-%m-%d') AS CHAR(19) ) AS opening_day,
	        CAST(DATE_FORMAT(closing_day, '%Y-%m-%d') AS CHAR(19) ) AS closing_day,
			film_rate,
			running_time,
			movie_genre,
			view_name
		from
			tbl_Movie as movie INNER JOIN tbl_view as img
		ON
			movie.movie_num = img.movie_num
		
		WHERE movie.movie_num = #{moive.movie_num}
	</select>
	
	<!-- 관리자 영화 데이터 등록 -->
	<insert id = "mnMovieCreate">
	<selectKey resultType = "String" keyProperty ="movie_num" order = "AFTER" >
		SELECT
			LAST_INSERT_ID()
	</selectKey>
	     insert into 
		     tbl_movie (
			     title,
			     story,
			     actor,
			     director,
			     opening_day, 
			     closing_day, 
			     film_rate, 
			     running_time,
			     avg_score, 
			     movie_genre 
	      ) values( 
	      		#{title},
	      		#{story},
	      		#{actor},
	      		#{director},
	      		#{opening_day},
	      		#{closing_day},
	      		#{film_rate},
	      		#{running_time},
	      		#{avg_score},
	      		#{movie_genre}
	      )
   </insert>
   
   <!--  관리자 페이지 수정 -->
   <update id="mnMovieUpdate">
      
      UPDATE tbl_movie
      SET 
 		 title = #{title},
  		 story = #{story},
  		 actor = #{actor},
  		 director = #{director},
  		 opening_day = #{opening_day},
  		 closing_day = #{closing_day},
  		 film_rate = #{film_rate},
  		 running_time = #{running_time},
  		 avg_score= #{avg_score},
  		 movie_genre = #{movie_genre}
  		
      WHERE
         movie_num = #{movie_num}
   </update>
   
   <!-- check tbl_view -->
   <select id="mnMovieFileCount" resultType="Integer">
   SELECT COUNT(*)
   FROM tbl_view
   WHERE movie_num = #{movie_num}
   </select>
   
   
   <!-- 관리자 영화 파일 등록 -->
   <insert id = "mnMovieFileInsert">
   		 insert into 
		     tbl_view (
			     view_path,
			     view_name_key,
			     view_name,
			     movie_num
	      ) values( 
	      		#{view_path},
	      		#{view_name_key},
	      		#{view_name},
	      		#{movie_num}
	      )
   </insert>
   
   <!-- 관리자 영화 파일 수정 -->
   <update id="mnMovieFileUpdate">
   		UPDATE tbl_view
      SET 
 		 view_path = #{view_path},
  		 view_name_key = #{view_name_key},
  		 view_name = #{view_name},
  		 view_modification_time = now()
      WHERE
         movie_num = #{movie_num}
   </update>
	
	<!-- 페이징 처리 -->
	<select id="mnMovieListPage" 
   		resultType="com.mycompany.myapp.domain.MovieViewJoinResultVO">
	  <![CDATA[
		SELECT 
			movie_num,
			title,
			movie_genre,
			opening_day,
			closing_day, 
			registration_time
		FROM tbl_movie
		ORDER BY movie_num
		limit #{page}, 10
	  ]]>   
   </select>
   
   <select id = "mnMovieListCriteria"
   		resultType="com.mycompany.myapp.domain.MovieViewJoinResultVO">
	
	  <![CDATA[
		SELECT 
			movie_num,
			title,
			movie_genre,
			opening_day,
			closing_day, 
			registration_time
		FROM tbl_movie
		ORDER BY movie_num
		limit #{pageStart}, #{perPageNum}
	  ]]>   
   </select>
   
     <select id = "mnMovieListCountPaging"
   		resultType="int">
	
	  <![CDATA[
		SELECT 
			count(movie_num)
		FROM tbl_movie
		where
			movie_num > 0
	  ]]>   
   </select>
   
    <!-- 관리자 영화 삭제  -->
   <delete id = " mnMovieDelete"  parameterType= "String">
      delete 
         from tbl_movie
      where 
         movie_num = #{movie_num}
   
   </delete>
 
<!-- 페이징 처리 -->
	
</mapper>